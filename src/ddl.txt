DROP TABLE IF EXISTS policy_types;
create table policy_types
(
	id integer not null
		constraint policy_types_pk
			primary key autoincrement,
	policy_type varchar(30) not null
);

DROP INDEX IF EXISTS policy_types_id_uindex;
create unique index policy_types_id_uindex
	on policy_types (id);

DROP TABLE IF EXISTS risks;
create table risks
(
	id integer not null
		constraint risks_pk
			primary key autoincrement,
	price_from float not null,
	price_to float not null,
	description varchar(255) not null,
	policy_type_id integer not null
		constraint risks_policy_types_id_fk
			references policy_types
);

DROP INDEX IF EXISTS risks_id_uindex;
create unique index risks_id_uindex
	on risks (id);

DROP TABLE IF EXISTS addresses;
create table addresses
(
	id integer not null
		constraint addresses_pk
			primary key autoincrement,
	country varchar(30) not null,
	zip_code varchar(20) not null,
	city varchar(30) not null,
	street varchar(40) not null,
	building_number varchar(20) not null,
	apartment_number varchar(20)
);

DROP INDEX IF EXISTS addresses_id_uindex;
create unique index addresses_id_uindex
	on addresses (id);

DROP TABLE IF EXISTS people;
create table people
(
	id integer not null
		constraint people_pk
			primary key autoincrement,
	pesel varchar(20),
	first_name varchar(30),
	last_name varchar(30)
);

DROP INDEX IF EXISTS people_id_uindex;
create unique index people_id_uindex
	on people (id);

DROP TABLE IF EXISTS enterprises;
create table enterprises
(
	id integer not null
		constraint enterprises_pk
			primary key autoincrement,
	nip varchar(30),
	regon varchar(30),
	representative_id integer
		constraint enterprises_people_id_fk
			references people
);

DROP TABLE IF EXISTS clients;
create table clients
(
	id integer not null
		constraint clients_pk
			primary key autoincrement,
	address_id integer
		constraint clients_addresses_id_fk
			references addresses,
	phone varchar(30),
	person_id integer
		constraint clients_people_id_fk
			references people,
	enterprise_id integer
		constraint clients_enterprises_id_fk
			references enterprises
);

DROP INDEX IF EXISTS clients_id_uindex;
create unique index clients_id_uindex
	on clients (id);

DROP TABLE IF EXISTS damage_types;
create table damage_types
(
	id integer,
	damage_type varchar(50)
);

DROP TABLE IF EXISTS documents;
create table documents
(
	id integer not null
		constraint documents_pk
			primary key autoincrement,
	document_url varchar(100)
);

DROP INDEX IF EXISTS documents_id_uindex;
create unique index documents_id_uindex
	on documents (id);

DROP TABLE IF EXISTS policies;;
create table policies
(
	id integer not null
		constraint policies_pk
			primary key autoincrement,
	policyholder_id integer,
	insured_id integer,
	beneficiary_id integer,
	duration_from date,
	duration_to date,
	price float,
	policy_type integer,
	is_active boolean default true
);

DROP INDEX IF EXISTS policies_id_uindex;
create unique index policies_id_uindex
	on policies (id);

DROP TABLE IF EXISTS damages;
create table damages
(
	id integer not null
		constraint damages_pk
			primary key autoincrement,
	policy_id integer,
	damage_type integer
		constraint damages_damage_types_id_fk
			references damage_types (id),
	victim_id integer
		constraint damages_clients_id_fk
			references clients
);

DROP INDEX IF EXISTS damages_id_uindex;
create unique index damages_id_uindex
	on damages (id);

DROP TABLE IF EXISTS damages_documents;
create table damages_documents
(
	id integer not null
		constraint damages_documents_pk
			primary key autoincrement,
	damage_id integer not null
		constraint damages_documents_damages_id_fk
			references damages,
	document_id integer not null
		constraint damages_documents_documents_id_fk
			references documents
);

DROP INDEX IF EXISTS damages_documents_id_uindex;
create unique index damages_documents_id_uindex
	on damages_documents (id);

DROP TABLE IF EXISTS policies_risks;
create table policies_risks
(
	id integer not null
		constraint policies_risks_pk
			primary key autoincrement,
	policy_id integer not null
		constraint policies_risks_policies_id_fk
			references policies,
	risk_id integer not null
		constraint policies_risks_risks_id_fk
			references risks
);

DROP INDEX IF EXISTS policies_risks_id_uindex;
create unique index policies_risks_id_uindex
	on policies_risks (id);